# Generated by Django 5.2.7 on 2025-10-18 12:28

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0002_alter_favorite_user_alter_inquiry_user_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('utilities', 'On-site Utilities'), ('accessibility', 'Accessibility'), ('surroundings', 'Surroundings'), ('characteristics', 'Land Characteristics'), ('security', 'Security'), ('community', 'Community Features')], max_length=20)),
                ('icon_code', models.CharField(blank=True, help_text="e.g., '‚ö°', 'üö∞', 'üõ£Ô∏è'", max_length=20)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Amenities',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LegalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('title_deed', 'Title Deed'), ('survey_map', 'Survey Map'), ('zoning_certificate', 'Zoning Certificate'), ('brochure', 'Brochure'), ('deed_plan', 'Deed Plan'), ('approval_letter', 'Approval Letter'), ('search_certificate', 'Search Certificate')], max_length=20)),
                ('file', models.FileField(upload_to='property_documents/%Y/%m/%d/')),
                ('description', models.CharField(blank=True, max_length=200)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['document_type', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.CharField(choices=[('on_site', 'On Site'), ('nearby', 'Nearby'), ('planned', 'Planned'), ('not_available', 'Not Available')], default='on_site', max_length=20)),
                ('details', models.CharField(blank=True, help_text="e.g., '200m to tarmac road', '24/7 security'", max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Property Amenities',
            },
        ),
        migrations.CreateModel(
            name='PropertyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_name', models.CharField(max_length=100)),
                ('agent_phone', models.CharField(max_length=20)),
                ('agent_email', models.EmailField(blank=True, max_length=254)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20)),
                ('alternative_contact', models.CharField(blank=True, max_length=100)),
                ('office_address', models.TextField(blank=True)),
                ('license_number', models.CharField(blank=True, help_text='Agent license number', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Property Contacts',
            },
        ),
        migrations.CreateModel(
            name='PropertyMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('drone', 'Drone Video'), ('site_plan', 'Site Plan'), ('aerial', 'Aerial Photo'), ('document', 'Document')], max_length=20)),
                ('file', models.FileField(upload_to='property_media/%Y/%m/%d/')),
                ('video_url', models.URLField(blank=True, help_text='For embedded videos (YouTube, TikTok, Instagram)')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Property Media',
                'ordering': ['display_order', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='inquiry',
            name='assigned_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_inquiries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inquiry',
            name='budget_range',
            field=models.CharField(blank=True, help_text="Client's budget range", max_length=100),
        ),
        migrations.AddField(
            model_name='inquiry',
            name='internal_notes',
            field=models.TextField(blank=True, help_text='Agent notes about the inquiry'),
        ),
        migrations.AddField(
            model_name='inquiry',
            name='source',
            field=models.CharField(choices=[('website', 'Website'), ('whatsapp', 'WhatsApp'), ('phone', 'Phone Call'), ('email', 'Email'), ('walk_in', 'Walk In')], default='website', max_length=20),
        ),
        migrations.AddField(
            model_name='inquiry',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='property',
            name='deposit_percentage',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Required deposit percentage', max_digits=5, null=True),
        ),
        migrations.AddField(
            model_name='property',
            name='discount_offers',
            field=models.TextField(blank=True, help_text='Early bird, bulk purchase discounts'),
        ),
        migrations.AddField(
            model_name='property',
            name='distance_to_main_road',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Distance in km', max_digits=8, null=True),
        ),
        migrations.AddField(
            model_name='property',
            name='electricity_availability',
            field=models.CharField(choices=[('on_site', 'On Site'), ('nearby', 'Nearby'), ('planned', 'Planned'), ('none', 'None')], default='none', max_length=20),
        ),
        migrations.AddField(
            model_name='property',
            name='has_beacons',
            field=models.BooleanField(default=False, help_text='Boundary beacons in place'),
        ),
        migrations.AddField(
            model_name='property',
            name='has_borehole',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='has_drainage',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='has_piped_water',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='has_sewer_system',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='has_subdivision_approval',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='inquiry_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='property',
            name='internet_availability',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='is_fenced',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='is_gated_community',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='is_negotiable',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='property',
            name='land_type',
            field=models.CharField(blank=True, choices=[('residential', 'Residential'), ('agricultural', 'Agricultural'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('mixed_use', 'Mixed Use')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='property',
            name='landmarks',
            field=models.TextField(blank=True, help_text='Comma-separated nearby landmarks'),
        ),
        migrations.AddField(
            model_name='property',
            name='num_plots_available',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='property',
            name='payment_plan_details',
            field=models.TextField(blank=True, help_text='JSON or text describing installment plans'),
        ),
        migrations.AddField(
            model_name='property',
            name='plot_dimensions',
            field=models.CharField(blank=True, help_text="e.g., '50x100ft', '100x100ft'", max_length=50),
        ),
        migrations.AddField(
            model_name='property',
            name='price_per_unit',
            field=models.CharField(blank=True, help_text="e.g., 'per acre', 'per plot'", max_length=50),
        ),
        migrations.AddField(
            model_name='property',
            name='road_access_type',
            field=models.CharField(blank=True, help_text="e.g., 'tarmac', 'murram', 'gravel'", max_length=50),
        ),
        migrations.AddField(
            model_name='property',
            name='short_description',
            field=models.CharField(blank=True, help_text='Brief description for listing cards', max_length=255),
        ),
        migrations.AddField(
            model_name='property',
            name='size_acres',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='property',
            name='soil_type',
            field=models.CharField(blank=True, help_text="e.g., 'red soil', 'black cotton', 'sandy'", max_length=50),
        ),
        migrations.AddField(
            model_name='property',
            name='title_deed_status',
            field=models.CharField(blank=True, choices=[('freehold', 'Freehold'), ('leasehold', 'Leasehold'), ('absentee', 'Absentee'), ('group_ranch', 'Group Ranch'), ('community_land', 'Community Land')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='property',
            name='topography',
            field=models.CharField(blank=True, help_text="e.g., 'flat', 'gentle slope', 'hilly'", max_length=100),
        ),
        migrations.AddField(
            model_name='property',
            name='total_plots',
            field=models.IntegerField(default=1, help_text='Total plots in the development'),
        ),
        migrations.AddField(
            model_name='property',
            name='water_supply_types',
            field=models.JSONField(blank=True, default=list, help_text="List of water sources: ['borehole', 'piped', 'river', 'well']"),
        ),
        migrations.AddField(
            model_name='property',
            name='zoning',
            field=models.CharField(blank=True, help_text='Zoning classification', max_length=100),
        ),
        migrations.AddField(
            model_name='propertyimage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='inquiry',
            name='inquiry_type',
            field=models.CharField(choices=[('property_inquiry', 'Property Inquiry'), ('valuation_request', 'Valuation Request'), ('management_request', 'Management Request'), ('general_inquiry', 'General Inquiry'), ('site_visit', 'Site Visit Request')], default='property_inquiry', max_length=20),
        ),
        migrations.AlterField(
            model_name='inquiry',
            name='phone',
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name='inquiry',
            name='property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inquiries', to='properties.property'),
        ),
        migrations.AlterField(
            model_name='inquiry',
            name='status',
            field=models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('scheduled', 'Tour Scheduled'), ('closed', 'Closed'), ('converted', 'Converted to Sale')], default='new', max_length=20),
        ),
        migrations.AlterField(
            model_name='inquiry',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property_inquiries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='property',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('published', 'Published'), ('sold', 'Sold'), ('rented', 'Rented'), ('under_offer', 'Under Offer')], default='draft', max_length=20),
        ),
        migrations.AlterField(
            model_name='propertyimage',
            name='image',
            field=models.ImageField(upload_to='property_images/%Y/%m/%d/'),
        ),
        migrations.AddIndex(
            model_name='inquiry',
            index=models.Index(fields=['status', 'created_at'], name='properties__status_dd4982_idx'),
        ),
        migrations.AddIndex(
            model_name='inquiry',
            index=models.Index(fields=['property', 'created_at'], name='properties__propert_d3ae6d_idx'),
        ),
        migrations.AddIndex(
            model_name='inquiry',
            index=models.Index(fields=['source', 'created_at'], name='properties__source_c6ea7a_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['property_type', 'status'], name='properties__propert_487234_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['land_type', 'status'], name='properties__land_ty_c0b79e_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['price', 'status'], name='properties__price_968017_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['city', 'status'], name='properties__city_eb43d5_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['latitude', 'longitude'], name='properties__latitud_6eb2b0_idx'),
        ),
        migrations.AddIndex(
            model_name='property',
            index=models.Index(fields=['created_at', 'status'], name='properties__created_49997c_idx'),
        ),
        migrations.AddField(
            model_name='legaldocument',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='properties.property'),
        ),
        migrations.AddField(
            model_name='legaldocument',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='propertyamenity',
            name='amenity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.amenity'),
        ),
        migrations.AddField(
            model_name='propertyamenity',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amenities', to='properties.property'),
        ),
        migrations.AddField(
            model_name='propertycontact',
            name='property',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to='properties.property'),
        ),
        migrations.AddField(
            model_name='propertymedia',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='properties.property'),
        ),
        migrations.AlterUniqueTogether(
            name='propertyamenity',
            unique_together={('property', 'amenity')},
        ),
    ]
